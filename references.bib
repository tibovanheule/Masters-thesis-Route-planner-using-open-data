
@misc{noauthor_5-star_nodate,
	title = {5-star {Open} {Data}},
	url = {http://5stardata.info/en/},
	abstract = {Information around Tim Berners-Lee's 5-star Open Data Plan},
	language = {en},
	urldate = {2024-01-24},
}

@incollection{bast_scalable_2015,
	series = {Proceedings},
	title = {Scalable {Transfer} {Patterns}},
	url = {https://epubs.siam.org/doi/10.1137/1.9781611974317.2},
	abstract = {We consider the problem of Pareto-optimal route planning in public-transit networks of a whole country, a whole continent, or even the whole world. On such large networks, existing approaches suffer from either a very large space consumption, a very long preprocessing time or slow query processing. Transfer Patterns, a state-of-the-art technique for route planning in transit networks, achieves excellent query times, but the space consumption is large and the preprocessing time is huge. In this paper, we introduce a new scheme for the Transfer Pattern precomputation and query graph construction that reduces both the necessary preprocessing time and space consumption by an order of magnitude and more. Average query times are below 1 ms for local queries, independent of the size of the network, around 30 ms for non-local queries on the complete transit network of Germany, and an estimated 200 ms for a fictitious transit network covering the currently available data of the whole world.},
	urldate = {2024-01-22},
	booktitle = {2016 {Proceedings} of the {Meeting} on {Algorithm} {Engineering} and {Experiments} ({ALENEX})},
	publisher = {Society for Industrial and Applied Mathematics},
	author = {Bast, Hannah and Hertel, Matthias and Storandt, Sabine},
	month = dec,
	year = {2015},
	doi = {10.1137/1.9781611974317.2},
	pages = {15--29},
}

@incollection{witt_trip-based_2015,
	title = {Trip-{Based} {Public} {Transit} {Routing}},
	volume = {9294},
	url = {http://arxiv.org/abs/1504.07149},
	abstract = {We study the problem of computing all Pareto-optimal journeys in a public transit network regarding the two criteria of arrival time and number of transfers taken. We take a novel approach, focusing on trips and transfers between them, allowing fine-grained modeling. Our experiments on the metropolitan network of London show that the algorithm computes full 24-hour profiles in 70 ms after a preprocessing phase of 30 s, allowing fast queries in dynamic scenarios.},
	urldate = {2024-01-22},
	author = {Witt, Sascha},
	year = {2015},
	doi = {10.1007/978-3-662-48350-3_85},
	note = {arXiv:1504.07149 [cs]},
	keywords = {Computer Science - Data Structures and Algorithms, G.2.2, G.2.3},
	pages = {1025--1036},
}

@misc{noauthor_raptor_2023,
	title = {Raptor implementation},
	url = {https://github.com/planarnetwork/raptor},
	publisher = {planarnetwork},
	month = nov,
	year = {2023},
	note = {Publication Title: GitHub},
}

@misc{noauthor_otp_2023,
	title = {{OTP} {Summit}},
	url = {https://groups.google.com/g/opentripplanner-dev/c/R8g9I1kId_4/m/mc8y0y1ZAwAJ?pli=1},
	month = nov,
	year = {2023},
	keywords = {Open Trip Planner, Raptor, server side},
}

@article{delling_round-based_2015,
	title = {Round-{Based} {Public} {Transit} {Routing}},
	volume = {49},
	issn = {0041-1655},
	url = {https://pubsonline.informs.org/doi/10.1287/trsc.2014.0534},
	doi = {10.1287/trsc.2014.0534},
	abstract = {We study the problem of computing all Pareto-optimal journeys in a dynamic public transit network for multiple criteria, such as arrival time and number of transfers. Existing algorithms consider this as a graph problem and solve it using various graph search algorithms. Unfortunately, this leads to either high query times or suboptimal solutions. We take a different approach. We introduce RAPTOR, our novel round-based public transit router. Unlike previous algorithms, it is not Dijkstra-based, looks at each route (such as a bus line) in the network at most once per round, and can be made even faster with simple pruning rules and parallelization using multiple cores. Because it does not rely on preprocessing, RAPTOR works in fully dynamic scenarios. Starting from arrival time and number of transfers as criteria, it can be easily extended to handle flexible departure times or arbitrary additional criteria. As practical examples we consider fare zones and reliability of transfers. When run on complex public transportation networks (such as London), RAPTOR computes all Pareto-optimal journeys between two random locations an order of magnitude faster than previous approaches, which easily enables interactive applications.},
	number = {3},
	urldate = {2024-01-20},
	journal = {Transportation Science},
	author = {Delling, Daniel and Pajor, Thomas and Werneck, Renato F.},
	month = aug,
	year = {2015},
	note = {Publisher: INFORMS},
	keywords = {dynamic programming, multicore, multicriteria optimization, public transit, shortest paths, timetable information},
	pages = {591--604},
}

@inproceedings{dibbelt_intriguingly_2013,
	address = {Berlin, Heidelberg},
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {Intriguingly {Simple} and {Fast} {Transit} {Routing}},
	isbn = {978-3-642-38527-8},
	doi = {10.1007/978-3-642-38527-8_6},
	abstract = {This paper studies the problem of computing optimal journeys in dynamic public transit networks. We introduce a novel algorithmic framework, called Connection Scan Algorithm (CSA), to compute journeys. It organizes data as a single array of connections, which it scans once per query. Despite its simplicity, our algorithm is very versatile. We use it to solve earliest arrival and multi-criteria profile queries. Moreover, we extend it to handle the minimum expected arrival time (MEAT) problem, which incorporates stochastic delays on the vehicles and asks for a set of (alternative) journeys that in its entirety minimizes the user’s expected arrival time at the destination. Our experiments on the dense metropolitan network of London show that CSA computes MEAT queries, our most complex scenario, in 272 ms on average.},
	language = {en},
	booktitle = {Experimental {Algorithms}},
	publisher = {Springer},
	author = {Dibbelt, Julian and Pajor, Thomas and Strasser, Ben and Wagner, Dorothea},
	editor = {Bonifaci, Vincenzo and Demetrescu, Camil and Marchetti-Spaccamela, Alberto},
	year = {2013},
	keywords = {Arrival Time, Early Arrival, Priority Queue, Stochastic Delay, Transit Route},
	pages = {43--54},
}

@inproceedings{bast_fast_2010,
	address = {Berlin, Heidelberg},
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {Fast {Routing} in {Very} {Large} {Public} {Transportation} {Networks} {Using} {Transfer} {Patterns}},
	isbn = {978-3-642-15775-2},
	doi = {10.1007/978-3-642-15775-2_25},
	abstract = {We show how to route on very large public transportation networks (up to half a billion arcs) with average query times of a few milliseconds. We take into account many realistic features like: traffic days, walking between stations, queries between geographic locations instead of a source and a target station, and multi-criteria cost functions. Our algorithm is based on two key observations: (1) many shortest paths share the same transfer pattern, i.e., the sequence of stations where a change of vehicle occurs; (2) direct connections without change of vehicle can be looked up quickly. We precompute the respective data; in practice, this can be done in time linear in the network size, at the expense of a small fraction of non-optimal results. We have accelerated public transportation routing on Google Maps with a system based on our ideas. We report experimental results for three data sets of various kinds and sizes.},
	language = {en},
	booktitle = {Algorithms – {ESA} 2010},
	publisher = {Springer},
	author = {Bast, Hannah and Carlsson, Erik and Eigenwillig, Arno and Geisberger, Robert and Harrelson, Chris and Raychev, Veselin and Viger, Fabien},
	editor = {de Berg, Mark and Meyer, Ulrich},
	year = {2010},
	keywords = {Local Search, Optimal Cost, Query Time, Target Station, Transfer Pattern, transfer patterns},
	pages = {290--301},
}

@misc{noauthor_9th_2017,
	title = {9th {DIMACS} {Implementation} {Challenge}: {Shortest} {Paths}},
	shorttitle = {9th {DIMACS} {Implementation} {Challenge}},
	url = {https://web.archive.org/web/20170606011114/http://www.dis.uniroma1.it/challenge9/format.shtml},
	urldate = {2024-01-20},
	month = jun,
	year = {2017},
}

@incollection{bast_car_2009,
	address = {Berlin, Heidelberg},
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {Car or {Public} {Transport}—{Two} {Worlds}},
	isbn = {978-3-642-03456-5},
	url = {https://doi.org/10.1007/978-3-642-03456-5_24},
	abstract = {There are two kinds of people: those who travel by car, and those who use public transport. The topic of this article is to show that the algorithmic problem of computing the fastest way to get from A to B is also surprisingly different on road networks than on public transportation networks.},
	language = {en},
	urldate = {2024-01-20},
	booktitle = {Efficient {Algorithms}: {Essays} {Dedicated} to {Kurt} {Mehlhorn} on the {Occasion} of {His} 60th {Birthday}},
	publisher = {Springer},
	author = {Bast, Hannah},
	editor = {Albers, Susanne and Alt, Helmut and Näher, Stefan},
	year = {2009},
	doi = {10.1007/978-3-642-03456-5_24},
	keywords = {Local Search, Public Transport, Road Network, Road Segment, Short Path},
	pages = {355--367},
}

@misc{noauthor_rdf_2023,
	title = {{RDF} {Mapping} {Language} ({RML})},
	url = {https://rml.io/specs/rml},
	month = sep,
	year = {2023},
}

@inproceedings{houda_public_2010,
	title = {A public transportation ontology to support user travel planning},
	doi = {10.1109/RCIS.2010.5507372},
	booktitle = {2010 {Fourth} {International} {Conference} on {Research} {Challenges} in {Information} {Science} ({RCIS})},
	author = {Houda, Mnasser and Khemaja, Maha and Oliveira, Kathia and Abed, Mourad},
	year = {2010},
	pages = {127--136},
}

@article{bouhana_ontology-based_2015,
	title = {An ontology-based {CBR} approach for personalized itinerary search systems for sustainable urban freight transport},
	volume = {42},
	issn = {0957-4174},
	url = {https://www.sciencedirect.com/science/article/pii/S0957417414007908},
	doi = {https://doi.org/10.1016/j.eswa.2014.12.012},
	abstract = {This paper presents a novel information retrieval approach for personalized itinerary search in urban freight transport systems. The proposed approach is based on the integration of three techniques: Case Base Reasoning, Choquet integral and ontology. It has the following advanced features: (1) user-oriented ontology is used as source of knowledge to extract pertinent information about stakeholder’s preferences and needs; (2) semantic web rule language is considered to provide the system with enhanced semantic capabilities and support personalized case representation; (3) a CBR-personalized retrieval mechanism is designed to provide a user with an optimum itinerary that meets his personal needs and preferences. The above features lead to a personalized and optimum itinerary search that meets the user’s needs as specified in their queries such as fuel consumption, environmental impact, optimum route, time management etc. This has the potential to effectively manage fright movement according to stakeholder’s needs and alleviate congestion problems in urban areas. The proposed intelligent decision support system (Onto-CBR) is implemented to an itinerary search problem for freight transportation users in urban areas. Its performance is further compared to an itineraries search system that was proposed by the authors in an earlier publication. Both approaches are compared in terms of their ability to meet user’s personal preferences and achieve accuracy in case retrieval. The experimental results showed the ability of the proposed system to improve the accuracy of case retrieval and reduce retrieval time prominently. The ability of the proposed system tailor the search to stakeholders needs, improve the accuracy of case retrieval and facilitate the search process are among the main positive features of the proposed intelligent decision support system.},
	number = {7},
	journal = {Expert Systems with Applications},
	author = {Bouhana, Amna and Zidi, Amir and Fekih, Afef and Chabchoub, Habib and Abed, Mourad},
	year = {2015},
	keywords = {Information retrieval, Itinerary search, Multi-criteria decision support, Personalization, Urban freight transport},
	pages = {3724--3741},
}

@misc{noauthor_oslo_2023,
	title = {{OSLO} {Mobiliteit} - {Dienstregeling} en {Planning}: {Tijdstabellen} ({Applicatieprofiel})},
	url = {https://data.vlaanderen.be/doc/applicatieprofiel/mobiliteit/dienstregeling-en-planning/tijdstabellen},
	month = jul,
	year = {2023},
}

@article{gruber_translation_1993,
	title = {A translation approach to portable ontology specifications},
	volume = {5},
	issn = {1042-8143},
	url = {https://www.sciencedirect.com/science/article/pii/S1042814383710083},
	doi = {https://doi.org/10.1006/knac.1993.1008},
	abstract = {To support the sharing and reuse of formally represented knowledge among AI systems, it is useful to define the common vocabulary in which shared knowledge is represented. A specification of a representational vocabulary for a shared domain of discourse—definitions of classes, relations, functions, and other objects—is called an ontology. This paper describes a mechanism for defining ontologies that are portable over representation systems. Definitions written in a standard format for predicate calculus are translated by a system called Ontolingua into specialized representations, including frame-based systems as well as relational languages. This allows researchers to share and reuse ontologies, while retaining the computational benefits of specialized implementations. We discuss how the translation approach to portability addresses several technical problems. One problem is how to accommodate the stylistic and organizational differences among representations while preserving declarative content. Another is how to translate from a very expressive language into restricted languages, remaining system-independent while preserving the computational efficiency of implemented systems. We describe how these problems are addressed by basing Ontolingua itself on an ontology of domain-independent, representational idioms.},
	number = {2},
	journal = {Knowledge Acquisition},
	author = {Gruber, Thomas R.},
	year = {1993},
	pages = {199--220},
}

@misc{noauthor_gtfs_2022,
	title = {{GTFS} {Static} {Overview}},
	url = {https://developers.google.com/transit/gtfs},
	month = sep,
	year = {2022},
	note = {Publication Title: Google for Developers},
}

@misc{noauthor_last-modified_2023,
	title = {Last-{Modified} - {HTTP} {\textbackslash}vert {MDN}},
	url = {https://developer.mozilla.org/fr/docs/Web/HTTP/Headers/Last-Modified},
	month = nov,
	year = {2023},
}

@misc{noauthor_gtfsbe_2022,
	title = {{GTFS}.be - {GTFS} {Belgium}},
	url = {https://gtfs.be/index_en.html},
	month = dec,
	year = {2022},
}

@article{flipts_fragmenting_2020,
	title = {Fragmenting public transport timetables on the web in tiles for serverless route planning},
	url = {https://lib.ugent.be/en/catalog/rug01:002945734?i=0&q=Fragmenting+public+transport+timetables+on+the+web+in+tiles+for+serverless+route+planning+},
	journal = {2020.},
	author = {Flipts, Jeroen},
	year = {2020},
	note = {Publisher: 2020.},
}

@inproceedings{rojas_melendez_julian_andres_decentralized_2020,
	title = {Decentralized route planning across the web of data},
	volume = {2548},
	url = {{http://ceur-ws.org/Vol-2548/paper-09.pdf}},
	abstract = {Wheelchair users looking for accessible public transport routes, tourists discovering attractive routes to go around a new city, or bicycle users trying to avoid highly polluted routes are some examples where highly individualized route planning is needed. Current route planning applications lack query flexibility. The types of queries supported by a route planner are only determined at design time and heavily depend on centralized pre-selected data sources. Integrating a new data source such as another transport mode, a different road network or wheelchair accessibility is not straightforward as it generally requires human intervention to extend the subjacent data model and route planning algorithm implementation. I investigate how relevant data sources available on the Web can be dynamically reused for answering custom queries, and thus allow creating more flexible and personalized route planning applications. Semantic Web and Linked Data technologies provide a common framework for data integration. Yet it is still unclear how relevant data can be automatically reused while remaining independent from specific route planning algorithm implementations. Preliminary work (i) tests the feasibility of solving route planning queries over live and static public transport data sources on the Web, (ii) explores the trade-offs of different Web APIs for publishing and consuming live data streams on the Web and (iii) introduces a Linked Data based approach for publishing road networks data.},
	language = {eng},
	booktitle = {Proceedings of the {Doctoral} {Consortium} at {ISWC} 2019 ({ISWC}-{DC} 2019)},
	author = {{Rojas Melendez, Julian Andres}},
	year = {2020},
	note = {ISSN: 1613-0073
Place: Auckland, New Zealand},
	keywords = {Knowledge Graph, Linked Data, Route Planning, Web API},
	pages = {93--103},
}

@article{katsumi_ontologies_2018,
	title = {Ontologies for transportation research: {A} survey},
	volume = {89},
	issn = {0968-090X},
	doi = {10.1016/j.trc.2018.01.023},
	journal = {Transportation Research Part C: Emerging Technologies},
	author = {Katsumi, Megan and Fox, Mark},
	month = apr,
	year = {2018},
	note = {Publisher: Pergamon},
	pages = {53--82},
}

@inproceedings{keller_introducing_2014,
	address = {Cham},
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {Introducing the {Public} {Transport} {Domain} to the {Web} of {Data}},
	isbn = {978-3-319-11746-1},
	doi = {10.1007/978-3-319-11746-1_38},
	abstract = {The public transport domain generates large amounts of structured data. Making that information available on the Web of Data and linking it to other data sources can enable new services and applications for the benefit of passengers as well as public transport providers. Most standard data models in the public transport domain lack explicit semantics and interoperability because they are modeled in an informal or implementation-centric way. In this paper, we describe the development process of an OWL-ontology based on existing data models and standards in the domain. We show that our ontology enables the development of advanced passenger information systems and we briefly illustrate the application in a tourism-themed prototype.},
	language = {en},
	booktitle = {Web {Information} {Systems} {Engineering} – {WISE} 2014},
	publisher = {Springer International Publishing},
	author = {Keller, Christine and Brunk, Sören and Schlegel, Thomas},
	editor = {Benatallah, Boualem and Bestavros, Azer and Manolopoulos, Yannis and Vakali, Athena and Zhang, Yanchun},
	year = {2014},
	keywords = {linked data, ontology, public transport},
	pages = {521--530},
}

@article{rojas_melendez_publishing_2022,
	title = {Publishing {Planned}, {Live} and {Historical} {Public} {Transport} {Data} on the {Web} with the {Linked} {Connections} {Framework}},
	url = {https://ruben.verborgh.org/publications/rojas_swj_2022/},
	abstract = {Publishing transport data on the Web for consumption by others poses several challenges for data publishers. In addition to planned schedules, access to live schedule updates (e…},
	language = {en},
	urldate = {2023-05-27},
	journal = {Semantic Web Journal},
	author = {Rojas Meléndez, Julián and Delva, Harm and Colpaert, Pieter and Verborgh, Ruben},
	year = {2022},
}

@misc{noauthor_linked_nodate,
	title = {Linked {Connections}},
	url = {https://linkedconnections.org/specification/1-0},
	urldate = {2023-05-27},
}

@misc{noauthor_republishing_nodate,
	title = {Republishing {OpenStreetMap}’s roads as {Linked} {Routable} {Tiles}},
	url = {http://www.pieter.pm/demo-paper-routable-tiles/},
	urldate = {2023-05-27},
}
